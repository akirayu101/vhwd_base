<html><head><title>ipc</title><link rel="Stylesheet" type="text/css" href="DocStyle.css" /></head><body><div><H1><a name="NamedPipe">NamedPipe</a>
</H1><hr /><P>命名管道类。</P><table><thead><tr><td class=col_name>Member Function Name</td><td class=col_desc>Desc</td></tr></thead><tbody><tr><td>(constructor)</td><td>构造函数。</td></tr><tr><td>(detructor)</td><td>析构函数。</td></tr><tr><td>operator=</td><td>赋值函数。</td></tr><tr><td>Connect</td><td>连接管道。</td></tr><tr><td>Create</td><td>创建命名管道。</td></tr><tr><td>Accept</td><td>等待管道连接。</td></tr><tr><td>Disconnect</td><td>关闭连接。</td></tr><tr><td>Send</td><td>发送数据到管道。</td></tr><tr><td>Recv</td><td>从管道接收数据。</td></tr><tr><td>Close</td><td>关闭管道。</td></tr></tbody></table><br /><H1><a name="Pipe">Pipe</a>
</H1><hr /><P>管道类。</P><table><thead><tr><td class=col_name>Member Function Name</td><td class=col_desc>Desc</td></tr></thead><tbody><tr><td>(constructor)</td><td>构造函数。</td></tr><tr><td>(detructor)</td><td>析构函数。</td></tr><tr><td>operator=</td><td>赋值函数。</td></tr><tr><td>LinkPipe</td><td>连接两个管道。</td></tr><tr><td>Send</td><td>发送数据到管道。</td></tr><tr><td>Recv</td><td>从管道接收数据。</td></tr><tr><td>Close</td><td>关闭管道。</td></tr></tbody></table><br /><H1><a name="SharedMem">SharedMem</a>
</H1><hr /><P>共享内存类。</P><table><thead><tr><td class=col_name>Member Function Name</td><td class=col_desc>Desc</td></tr></thead><tbody><tr><td>(constructor)</td><td>构造函数。</td></tr><tr><td>(detructor)</td><td>析构函数。</td></tr><tr><td>operator=</td><td>赋值函数。</td></tr><tr><td>size</td><td>取得共享内存的大小。</td></tr><tr><td>addr</td><td>取得共享内存的首地址。</td></tr><tr><td>Create</td><td>创建共享内存。</td></tr><tr><td>Open</td><td>打开共享内存。</td></tr><tr><td>OpenFile</td><td>打开文件并映射到共享内存。</td></tr><tr><td>Alloc</td><td>分配内存，不映射任何文件或关联什么名字。</td></tr><tr><td>Close</td><td>关闭共享内存。</td></tr></tbody></table><br /><H1><a name="SharedMemQueue">SharedMemQueue</a>
</H1><hr /><P>基于共享内存的无锁循环队列，此队列包括指定数量指定大小的定长Buffer，一个用于分配Buffer的队列，还有两个使用非负整数作为元素的辅助队列。队列中一般存放Buffer Index。一般的用法，某进程从队列中取得一个空闲的Buffer Index，然后把数据写到Buffer中，然后把这个Buffer Index加入到辅助队列1或辅助队列2中，然后由其他进程从辅助队列中取得这个Buffer Index，再根据Buffer Index找到数据并进行处理，然后归还这个Buffer Index或再次加入到辅助队列中。</P><table><thead><tr><td class=col_name>Member Function Name</td><td class=col_desc>Desc</td></tr></thead><tbody><tr><td>(constructor)</td><td>构造函数。</td></tr><tr><td>(detructor)</td><td>析构函数。</td></tr><tr><td>Create</td><td>创建无锁循环队列。注意，Buffer的数量和队列的大小，都必须为2^n的形式。</td></tr><tr><td>Close</td><td>关闭队列，使所有的队列操作非阻塞，不成功的入队操作返回假，不成功的出队操作返回-1。</td></tr><tr><td>Ok</td><td>判断队列是否正确初始化了。</td></tr><tr><td>Buffer_size</td><td>取得Buffer的大小。</td></tr><tr><td>Buffer_count</td><td>取得Buffer的数量，必须为2^n的形式。</td></tr><tr><td>Buffer_address</td><td>根据Buffer Index取得数据首地址。</td></tr><tr><td>Buffer_putq</td><td>归还一个Buffer Index。此Buffer Index必须是由Buffer_getq获得的。</td></tr><tr><td>Buffer_getq</td><td>取得一个未使用的Buffer Index。</td></tr><tr><td>Queue1_putq</td><td>把一个整数加入到队列1的尾端。</td></tr><tr><td>Queue1_getq</td><td>从队列1前端取得一个元素并从队列1中移除。</td></tr><tr><td>Queue2_putq</td><td>把一个整数加入到队列2的尾端。</td></tr><tr><td>Queue2_getq</td><td>从队列2前端取得一个元素并从队列1中移除。</td></tr></tbody></table><br /></div></body></html>