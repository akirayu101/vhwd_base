<html><head><title>Logging</title><link rel="Stylesheet" type="text/css" href="DocStyle.css" /></head><body><div><H1><a name="LogConsole">LogConsole</a>
</H1><hr /><P>打印信息到控制台的LogTarget。</P><table><thead><tr><td class=col_name>Member Function Name</td><td class=col_desc>Desc</td></tr></thead><tbody><tr><td>(constructor)</td><td>构造函数。</td></tr><tr><td>(detructor) (virtual)</td><td>析构函数。</td></tr><tr><td>Handle (virtual)</td><td>处理LogRecord。</td></tr></tbody></table><br /><H1><a name="LogFile">LogFile</a>
</H1><hr /><P>保存信息到文件的LogTarget。</P><table><thead><tr><td class=col_name>Member Function Name</td><td class=col_desc>Desc</td></tr></thead><tbody><tr><td>(constructor)</td><td>构造函数。</td></tr><tr><td>(detructor) (virtual)</td><td>析构函数。</td></tr><tr><td>Handle (virtual)</td><td>处理LogRecord。</td></tr></tbody></table><br /><H1><a name="LogNull">LogNull</a>
</H1><hr /><P>空的LogTarget，此LogTarget会忽略所有发送给它的LogRecord。</P><table><thead><tr><td class=col_name>Member Function Name</td><td class=col_desc>Desc</td></tr></thead><tbody><tr><td>(constructor)</td><td>构造函数。</td></tr><tr><td>(detructor) (virtual)</td><td>析构函数。</td></tr><tr><td>Handle (virtual)</td><td>处理LogRecord。</td></tr></tbody></table><br /><H1><a name="LogPtr">LogPtr</a>
</H1><hr /><P>可重定义LogTarget的LogTarget。</P><table><thead><tr><td class=col_name>Member Function Name</td><td class=col_desc>Desc</td></tr></thead><tbody><tr><td>(constructor)</td><td>构造函数。</td></tr><tr><td>(detructor) (virtual)</td><td>析构函数。</td></tr><tr><td>operator=</td><td>赋值函数。</td></tr><tr><td>SetData</td><td>设置指定的LogTarget。</td></tr><tr><td>GetData</td><td>取得指定的LogTarget。</td></tr></tbody></table><br /><H1><a name="LogRecord">LogRecord</a>
</H1><hr /><P>Logger的消息定义，包括消息的描述，生成消息的时间，消息源，消息级别，线程ID。</P><table><thead><tr><td class=col_name>Member Function Name</td><td class=col_desc>Desc</td></tr></thead><tbody></tbody></table><br /><H1><a name="LogTarget">LogTarget</a>
</H1><hr /><P>Logger的目标类，用于处理Logger发送过来的LogRecord。</P><table><thead><tr><td class=col_name>Member Function Name</td><td class=col_desc>Desc</td></tr></thead><tbody><tr><td>(constructor)</td><td>构造函数。</td></tr><tr><td>(detructor) (virtual)</td><td>析构函数。</td></tr><tr><td>operator=</td><td>赋值函数。</td></tr><tr><td>Handle (virtual)</td><td>处理LogRecord。</td></tr><tr><td>Flush (virtual)</td><td>LogRecord在本LogTarget处理时，可能被缓存，Flush函数用于强制处理缓存。</td></tr><tr><td>Format (virtual)</td><td>把LogRecord转换成字符串。</td></tr></tbody></table><br /><H1><a name="Logger">Logger</a>
</H1><hr /><P>Logger类。</P><table><thead><tr><td class=col_name>Member Function Name</td><td class=col_desc>Desc</td></tr></thead><tbody><tr><td>(constructor)</td><td>构造函数。</td></tr><tr><td>(detructor)</td><td>析构函数。</td></tr><tr><td>operator=</td><td>赋值函数。</td></tr><tr><td>swap</td><td>交换两个Logger的内容。</td></tr><tr><td>def (static)</td><td>设置/取得 默认的LogTarget。</td></tr><tr><td>get</td><td>取得关联的LogTarget。</td></tr><tr><td>reset</td><td>设置LogTarget。</td></tr><tr><td>Src</td><td>设置/取得 消息的源。</td></tr><tr><td>Id</td><td>设置/取得 Logger的Id，一般是使用线程的编号。</td></tr><tr><td>Cache</td><td>缓冲消息。 如果启用了缓冲模式，那么，发送给Logger的信息，不会立即发送到LogTarget，而在是Logger内部缓存起来。 在Test函数调用时，再发送到LogTarget。</td></tr><tr><td>Handle</td><td>处理LogRecord。</td></tr><tr><td>Test</td><td>测试是否有错误信息，把缓冲的内容发送到LogTarget，并清除错误信息。</td></tr><tr><td>Ok</td><td>测试是否有错误信息。</td></tr><tr><td>Clear</td><td>清除错误。</td></tr><tr><td>LogMessage</td><td>把Message写到Logger。</td></tr><tr><td>LogWarning</td><td>把Warning写到Logger。</td></tr><tr><td>LogError</td><td>把Error写到Logger。</td></tr><tr><td>LogFetal</td><td>把FetalError写到Logger。</td></tr><tr><td>LogInfo</td><td>把Info写到Logger。</td></tr><tr><td>LogDeubg</td><td>把Debug信息写到Logger。</td></tr><tr><td>Printf</td><td>把指定的原始信息写入到Logger。</td></tr></tbody></table><br /><H1><a name="LoggerSwap">LoggerSwap</a>
</H1><hr /><P>LoggerSwap，用来临时替换线程私有的Logger。</P><table><thead><tr><td class=col_name>Member Function Name</td><td class=col_desc>Desc</td></tr></thead><tbody></tbody></table><br /></div></body></html>